services:
  # Container 1: MCP Server (Vulnerable Target)
  mcp-server:
    build:
      context: ./mcp_server
      dockerfile: Dockerfile
    container_name: vulnerable-mcp-server
    ports:
      - "8000:8000"
    networks:
      - research-net
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s = socket.socket(); s.settimeout(1); s.connect(('localhost', 8000)); s.close()"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Container 1.5: Secure MCP Server (Hardened Target)
  mcp-server-secure:
    build:
      context: ./mcp_server_secure
      dockerfile: Dockerfile.secure
    container_name: secure-mcp-server
    ports:
      - "8001:8001"
    networks:
      - research-net
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - sandbox-data:/app/data
    # Security hardening
    read_only: true
    tmpfs:
      - /tmp:size=100M,mode=1777
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s = socket.socket(); s.settimeout(1); s.connect(('localhost', 8001)); s.close()"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Container 2: LangGraph Agent (Official LangGraph CLI)
  langgraph-agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: langgraph-agent
    depends_on:
      mcp-server:
        condition: service_healthy
      mcp-server-secure:
        condition: service_healthy
    networks:
      - research-net
    ports:
      - "2024:2024"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.5-flash}
      - TARGET_SERVER=${TARGET_SERVER:-vulnerable}
      - MCP_SERVER_URL=http://mcp-server:8000
      - MCP_SERVER_SECURE_URL=http://mcp-server-secure:8001
      - MAX_ATTEMPTS=${MAX_ATTEMPTS:-2}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY:-}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-llm-sandbox-escape}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-false}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./results:/app/results
    restart: unless-stopped

volumes:
  sandbox-data:
    driver: local

networks:
  research-net:
    driver: bridge
