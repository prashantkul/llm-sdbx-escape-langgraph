# Security Researcher Agent - Environment Configuration
# Copy this file to .env and fill in your API keys

# ============================================================================
# Required Configuration
# ============================================================================

# Google Gemini API Key (REQUIRED)
# Get your key from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your_gemini_api_key_here

# ============================================================================
# LangSmith Configuration (Recommended for Tracing)
# ============================================================================

# LangSmith API Key for tracing and monitoring
# Sign up at: https://smith.langchain.com
LANGCHAIN_API_KEY=your_langsmith_api_key_here

# LangSmith project name (appears in the UI)
LANGCHAIN_PROJECT=llm-sandbox-escape

# Enable LangSmith tracing (true/false)
LANGCHAIN_TRACING_V2=true

# LangSmith endpoint (usually no need to change)
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com

# ============================================================================
# Model Configuration
# ============================================================================

# Gemini model to use
# Options: gemini-1.5-flash, gemini-1.5-pro, gemini-2.0-flash-exp
# Recommendation: gemini-1.5-flash (good balance of speed and capability)
GEMINI_MODEL=gemini-1.5-flash

# ============================================================================
# Agent Configuration
# ============================================================================

# Maximum number of injection attempts before giving up
MAX_ATTEMPTS=10

# ============================================================================
# MCP Server Configuration
# ============================================================================

# MCP server URL
# For local testing: http://localhost:8000
# For Docker: http://mcp-server:8000 (automatically set in docker-compose)
MCP_SERVER_URL=http://localhost:8000

# Use direct execution instead of MCP protocol (for local testing)
# Set to "true" to bypass MCP server and execute commands directly
# Set to "false" to use MCP server (required for Docker mode)
USE_DIRECT_CLIENT=false

# ============================================================================
# Logging Configuration
# ============================================================================

# Directory for experiment result logs
LOG_DIR=results

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ============================================================================
# Usage Examples
# ============================================================================

# Example 1: Local testing without MCP server
# USE_DIRECT_CLIENT=true
# Then run: ./start.sh test

# Example 2: With MCP server
# USE_DIRECT_CLIENT=false
# Terminal 1: ./start.sh mcp
# Terminal 2: ./start.sh cli

# Example 3: Docker mode (USE_DIRECT_CLIENT ignored)
# ./start.sh docker

# Example 4: API server with tracing
# LANGCHAIN_TRACING_V2=true
# ./start.sh api
